<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.practice.qtrproject.mapper.ProductMapper">

    <resultMap id="product" type="com.practice.qtrproject.model.product.Product">
        <id column="product_no" property="productNo" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="INTEGER"/>
        <result column="name" property= "name" jdbcType="VARCHAR"/>
        <result column="unique_code" property= "uniqueCode" jdbcType="VARCHAR"/>
        <result column="writer_no_list" property= "writerNoList" jdbcType="INTEGER" javaType="java.util.ArrayList" typeHandler="com.practice.qtrproject.handler.TypeHandler"/>
        <result column="trans_no_list" property= "transNoList" jdbcType="INTEGER" javaType="java.util.ArrayList" typeHandler="com.practice.qtrproject.handler.TypeHandler"/>
        <result column="reg_date" property= "regDate" jdbcType="TIMESTAMP"/>
        <result column="upd_date" property= "updDate" jdbcType="TIMESTAMP"/>
        <result column="del_date" property= "delDate" jdbcType="TIMESTAMP"/>
        <result column="product_info" property= "productInfo" javaType="com.practice.qtrproject.model.product.ProductInfo" typeHandler="com.practice.qtrproject.handler.TypeHandler"/>
        <result column="del_flag" property="delFlag" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="detailInfo" type="com.practice.qtrproject.dto.response.ResultProductDetailInfoDto" extends="product">
        <collection property="writerInfo" javaType="java.util.ArrayList" ofType="com.practice.qtrproject.model.writer.Writer">
            <id column="writer_no" property="writerNo" jdbcType="INTEGER"/>
            <result column="name" property= "name" jdbcType="VARCHAR"/>
            <result column="content" property= "content" jdbcType="VARCHAR"/>
            <result column="reg_date" property= "regDate" jdbcType="TIMESTAMP"/>
            <result column="upd_date" property= "updDate" jdbcType="TIMESTAMP"/>
        </collection>
        <collection property="translatorInfo" javaType="java.util.ArrayList" ofType="com.practice.qtrproject.model.writer.Translator">
            <id column="trans_no" property="transNo" jdbcType="INTEGER"/>
            <result column="name" property= "name" jdbcType="VARCHAR"/>
            <result column="content" property= "content" jdbcType="VARCHAR"/>
            <result column="reg_date" property= "regDate" jdbcType="TIMESTAMP"/>
            <result column="upd_date" property= "updDate" jdbcType="TIMESTAMP"/>
        </collection>
    </resultMap>

    <sql id="Filter_List">
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test=" searchParamDto.regDate != null and searchParamDto.regDate != '' ">
                AND reg_date &gt;= #{searchParamDto.regDate}
            </if>
            <if test=" searchParamDto.updDate != null and searchParamDto.updDate != '' ">
                AND upd_date &gt;= #{searchParamDto.updDate}
            </if>
            <if test=" searchParamDto.delDate != null and searchParamDto.delDate != '' ">
                AND del_date &gt;= #{searchParamDto.delDate}
            </if>
            <if test="searchParamDto.searchType != null and searchParamDto.searchType != '' ">
                <choose>
                    <when test='searchParamDto.searchType.equals("name")'>
                        AND name LIKE concat('%', #{value}, '%')
                    </when>
                    <when test='searchParamDto.searchType.equals("price")'>
                        AND price LIKE concat('%', #{value}, '%')
                    </when>
                </choose>
            </if>
        </trim>
        <choose>
            <when test="searchParamDto.regDate != null and searchParamDto.regDate != ''">
                ORDER BY reg_date ASC
            </when>
            <when test="searchParamDto.updDate != null and searchParamDto.updDate != ''">
                ORDER BY upd_date ASC
            </when>
            <when test="searchParamDto.delDate != null and searchParamDto.delDate != ''">
                ORDER BY del_date ASC
            </when>
        </choose>
        limit #{pageParamDto.offset}, #{pageParamDto.pageSize}
    </sql>

    <select id="getDetailInfo" resultMap="detailInfo">
        SELECT prod.*,
               writer.writer_no,
               writer.content,
               writer.reg_date,
               writer.upd_date,
               writer.name,
               translator.writer_no AS trans_no,
               translator.content,
               translator.reg_date,
               translator.upd_date,
               translator.name
        FROM product AS prod
                 LEFT JOIN writer AS writer ON JSON_CONTAINS(
                prod.writer_no_list,
                CAST(writer.writer_no AS JSON)
            )
                 LEFT JOIN writer AS translator ON JSON_CONTAINS(
                prod.trans_no_list,
                CAST(translator.writer_no AS JSON)
            )
        WHERE prod.product_no = #{no}
    </select>


    <insert id="saveProduct">
        INSERT INTO product (
            price,
            name,
            unique_code,
            product_info,
            writer_no_list,
            trans_no_list,
            reg_date
        )
        VALUES(
                  #{price}, #{name}, #{uniqueCode}, #{productInfo,typeHandler = com.practice.qtrproject.handler.TypeHandler},
                  #{writerNoList, typeHandler = com.practice.qtrproject.handler.TypeHandler}, #{transNoList, typeHandler = com.practice.qtrproject.handler.TypeHandler}, now()
                  )
    </insert>

    <select id="getList" resultMap="product">
        SELECT * FROM product
        <include refid="Filter_List"/>
    </select>

    <update id="updateDelDate">
        UPDATE product SET del_date = now(), del_flag = 1 WHERE product_no = #{no}
    </update>

    <delete id="deleteProduct">
        DELETE FROM product WHERE product_no = #{no}
    </delete>




    


</mapper>
